//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace UKNHMApi.LISProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SaleServiceSoap", Namespace="http://tempuri.org/")]
    public partial class SaleService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCenterWiseSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartyWiseSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAuthorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPro_BussinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitWiseTotalSalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UPHealthBookingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SHABookingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback HimHealthBookingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UPHealth_CancelTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChandanHospital_BookingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback chandanHosp_PatientLabResult_pdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback PettyCashRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPro_Bussiness_TargetOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_GetPro_Bussiness_TargetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTATSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_PatientRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApprovalDoctorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApprovalDoctorSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportSaveOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SaleService() {
            this.Url = global::UKNHMApi.Properties.Settings.Default.UKNHMApi_LISProxy_SaleService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetCenterWiseSaleCompletedEventHandler GetCenterWiseSaleCompleted;
        
        /// <remarks/>
        public event GetPartyWiseSaleCompletedEventHandler GetPartyWiseSaleCompleted;
        
        /// <remarks/>
        public event GetPatientAuthorizationCompletedEventHandler GetPatientAuthorizationCompleted;
        
        /// <remarks/>
        public event GetPro_BussinessCompletedEventHandler GetPro_BussinessCompleted;
        
        /// <remarks/>
        public event GetUnitWiseTotalSalesCompletedEventHandler GetUnitWiseTotalSalesCompleted;
        
        /// <remarks/>
        public event UPHealthBookingDataCompletedEventHandler UPHealthBookingDataCompleted;
        
        /// <remarks/>
        public event SHABookingDataCompletedEventHandler SHABookingDataCompleted;
        
        /// <remarks/>
        public event HimHealthBookingDataCompletedEventHandler HimHealthBookingDataCompleted;
        
        /// <remarks/>
        public event UPHealth_CancelTestCompletedEventHandler UPHealth_CancelTestCompleted;
        
        /// <remarks/>
        public event ChandanHospital_BookingDataCompletedEventHandler ChandanHospital_BookingDataCompleted;
        
        /// <remarks/>
        public event chandanHosp_PatientLabResult_pdfCompletedEventHandler chandanHosp_PatientLabResult_pdfCompleted;
        
        /// <remarks/>
        public event PettyCashRecordsCompletedEventHandler PettyCashRecordsCompleted;
        
        /// <remarks/>
        public event GetPro_Bussiness_TargetCompletedEventHandler GetPro_Bussiness_TargetCompleted;
        
        /// <remarks/>
        public event Insert_GetPro_Bussiness_TargetCompletedEventHandler Insert_GetPro_Bussiness_TargetCompleted;
        
        /// <remarks/>
        public event GetTATSummaryCompletedEventHandler GetTATSummaryCompleted;
        
        /// <remarks/>
        public event GetItemListCompletedEventHandler GetItemListCompleted;
        
        /// <remarks/>
        public event Insert_PatientRequestCompletedEventHandler Insert_PatientRequestCompleted;
        
        /// <remarks/>
        public event GetReportHeaderCompletedEventHandler GetReportHeaderCompleted;
        
        /// <remarks/>
        public event GetApprovalDoctorListCompletedEventHandler GetApprovalDoctorListCompleted;
        
        /// <remarks/>
        public event GetApprovalDoctorSignatureCompletedEventHandler GetApprovalDoctorSignatureCompleted;
        
        /// <remarks/>
        public event ReportSaveCompletedEventHandler ReportSaveCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCenterWiseSale", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCenterWiseSale(string CenterCode, string FromDate, string ToDate, string SecurityCode) {
            object[] results = this.Invoke("GetCenterWiseSale", new object[] {
                        CenterCode,
                        FromDate,
                        ToDate,
                        SecurityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCenterWiseSaleAsync(string CenterCode, string FromDate, string ToDate, string SecurityCode) {
            this.GetCenterWiseSaleAsync(CenterCode, FromDate, ToDate, SecurityCode, null);
        }
        
        /// <remarks/>
        public void GetCenterWiseSaleAsync(string CenterCode, string FromDate, string ToDate, string SecurityCode, object userState) {
            if ((this.GetCenterWiseSaleOperationCompleted == null)) {
                this.GetCenterWiseSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCenterWiseSaleOperationCompleted);
            }
            this.InvokeAsync("GetCenterWiseSale", new object[] {
                        CenterCode,
                        FromDate,
                        ToDate,
                        SecurityCode}, this.GetCenterWiseSaleOperationCompleted, userState);
        }
        
        private void OnGetCenterWiseSaleOperationCompleted(object arg) {
            if ((this.GetCenterWiseSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCenterWiseSaleCompleted(this, new GetCenterWiseSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPartyWiseSale", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPartyWiseSale(string CenterCode, string FromDate, string ToDate, string SecurityCode) {
            object[] results = this.Invoke("GetPartyWiseSale", new object[] {
                        CenterCode,
                        FromDate,
                        ToDate,
                        SecurityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartyWiseSaleAsync(string CenterCode, string FromDate, string ToDate, string SecurityCode) {
            this.GetPartyWiseSaleAsync(CenterCode, FromDate, ToDate, SecurityCode, null);
        }
        
        /// <remarks/>
        public void GetPartyWiseSaleAsync(string CenterCode, string FromDate, string ToDate, string SecurityCode, object userState) {
            if ((this.GetPartyWiseSaleOperationCompleted == null)) {
                this.GetPartyWiseSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartyWiseSaleOperationCompleted);
            }
            this.InvokeAsync("GetPartyWiseSale", new object[] {
                        CenterCode,
                        FromDate,
                        ToDate,
                        SecurityCode}, this.GetPartyWiseSaleOperationCompleted, userState);
        }
        
        private void OnGetPartyWiseSaleOperationCompleted(object arg) {
            if ((this.GetPartyWiseSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartyWiseSaleCompleted(this, new GetPartyWiseSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientAuthorization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientAuthorization(string UserName, string Password) {
            object[] results = this.Invoke("GetPatientAuthorization", new object[] {
                        UserName,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAuthorizationAsync(string UserName, string Password) {
            this.GetPatientAuthorizationAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void GetPatientAuthorizationAsync(string UserName, string Password, object userState) {
            if ((this.GetPatientAuthorizationOperationCompleted == null)) {
                this.GetPatientAuthorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAuthorizationOperationCompleted);
            }
            this.InvokeAsync("GetPatientAuthorization", new object[] {
                        UserName,
                        Password}, this.GetPatientAuthorizationOperationCompleted, userState);
        }
        
        private void OnGetPatientAuthorizationOperationCompleted(object arg) {
            if ((this.GetPatientAuthorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAuthorizationCompleted(this, new GetPatientAuthorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPro_Bussiness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPro_Bussiness(string DateInMonth) {
            object[] results = this.Invoke("GetPro_Bussiness", new object[] {
                        DateInMonth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPro_BussinessAsync(string DateInMonth) {
            this.GetPro_BussinessAsync(DateInMonth, null);
        }
        
        /// <remarks/>
        public void GetPro_BussinessAsync(string DateInMonth, object userState) {
            if ((this.GetPro_BussinessOperationCompleted == null)) {
                this.GetPro_BussinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPro_BussinessOperationCompleted);
            }
            this.InvokeAsync("GetPro_Bussiness", new object[] {
                        DateInMonth}, this.GetPro_BussinessOperationCompleted, userState);
        }
        
        private void OnGetPro_BussinessOperationCompleted(object arg) {
            if ((this.GetPro_BussinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPro_BussinessCompleted(this, new GetPro_BussinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitWiseTotalSales", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnitWiseTotalSales(string FromDate, string ToDate) {
            object[] results = this.Invoke("GetUnitWiseTotalSales", new object[] {
                        FromDate,
                        ToDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitWiseTotalSalesAsync(string FromDate, string ToDate) {
            this.GetUnitWiseTotalSalesAsync(FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetUnitWiseTotalSalesAsync(string FromDate, string ToDate, object userState) {
            if ((this.GetUnitWiseTotalSalesOperationCompleted == null)) {
                this.GetUnitWiseTotalSalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitWiseTotalSalesOperationCompleted);
            }
            this.InvokeAsync("GetUnitWiseTotalSales", new object[] {
                        FromDate,
                        ToDate}, this.GetUnitWiseTotalSalesOperationCompleted, userState);
        }
        
        private void OnGetUnitWiseTotalSalesOperationCompleted(object arg) {
            if ((this.GetUnitWiseTotalSalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitWiseTotalSalesCompleted(this, new GetUnitWiseTotalSalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UPHealthBookingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UPHealthBookingData(System.Data.DataSet ds) {
            object[] results = this.Invoke("UPHealthBookingData", new object[] {
                        ds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UPHealthBookingDataAsync(System.Data.DataSet ds) {
            this.UPHealthBookingDataAsync(ds, null);
        }
        
        /// <remarks/>
        public void UPHealthBookingDataAsync(System.Data.DataSet ds, object userState) {
            if ((this.UPHealthBookingDataOperationCompleted == null)) {
                this.UPHealthBookingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPHealthBookingDataOperationCompleted);
            }
            this.InvokeAsync("UPHealthBookingData", new object[] {
                        ds}, this.UPHealthBookingDataOperationCompleted, userState);
        }
        
        private void OnUPHealthBookingDataOperationCompleted(object arg) {
            if ((this.UPHealthBookingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPHealthBookingDataCompleted(this, new UPHealthBookingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SHABookingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SHABookingData(System.Data.DataSet ds) {
            object[] results = this.Invoke("SHABookingData", new object[] {
                        ds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SHABookingDataAsync(System.Data.DataSet ds) {
            this.SHABookingDataAsync(ds, null);
        }
        
        /// <remarks/>
        public void SHABookingDataAsync(System.Data.DataSet ds, object userState) {
            if ((this.SHABookingDataOperationCompleted == null)) {
                this.SHABookingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSHABookingDataOperationCompleted);
            }
            this.InvokeAsync("SHABookingData", new object[] {
                        ds}, this.SHABookingDataOperationCompleted, userState);
        }
        
        private void OnSHABookingDataOperationCompleted(object arg) {
            if ((this.SHABookingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SHABookingDataCompleted(this, new SHABookingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HimHealthBookingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HimHealthBookingData(System.Data.DataSet ds) {
            object[] results = this.Invoke("HimHealthBookingData", new object[] {
                        ds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HimHealthBookingDataAsync(System.Data.DataSet ds) {
            this.HimHealthBookingDataAsync(ds, null);
        }
        
        /// <remarks/>
        public void HimHealthBookingDataAsync(System.Data.DataSet ds, object userState) {
            if ((this.HimHealthBookingDataOperationCompleted == null)) {
                this.HimHealthBookingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHimHealthBookingDataOperationCompleted);
            }
            this.InvokeAsync("HimHealthBookingData", new object[] {
                        ds}, this.HimHealthBookingDataOperationCompleted, userState);
        }
        
        private void OnHimHealthBookingDataOperationCompleted(object arg) {
            if ((this.HimHealthBookingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HimHealthBookingDataCompleted(this, new HimHealthBookingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UPHealth_CancelTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UPHealth_CancelTest(string VisitID, string TestCode) {
            object[] results = this.Invoke("UPHealth_CancelTest", new object[] {
                        VisitID,
                        TestCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UPHealth_CancelTestAsync(string VisitID, string TestCode) {
            this.UPHealth_CancelTestAsync(VisitID, TestCode, null);
        }
        
        /// <remarks/>
        public void UPHealth_CancelTestAsync(string VisitID, string TestCode, object userState) {
            if ((this.UPHealth_CancelTestOperationCompleted == null)) {
                this.UPHealth_CancelTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPHealth_CancelTestOperationCompleted);
            }
            this.InvokeAsync("UPHealth_CancelTest", new object[] {
                        VisitID,
                        TestCode}, this.UPHealth_CancelTestOperationCompleted, userState);
        }
        
        private void OnUPHealth_CancelTestOperationCompleted(object arg) {
            if ((this.UPHealth_CancelTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPHealth_CancelTestCompleted(this, new UPHealth_CancelTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChandanHospital_BookingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChandanHospital_BookingData(System.Data.DataSet ds) {
            object[] results = this.Invoke("ChandanHospital_BookingData", new object[] {
                        ds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChandanHospital_BookingDataAsync(System.Data.DataSet ds) {
            this.ChandanHospital_BookingDataAsync(ds, null);
        }
        
        /// <remarks/>
        public void ChandanHospital_BookingDataAsync(System.Data.DataSet ds, object userState) {
            if ((this.ChandanHospital_BookingDataOperationCompleted == null)) {
                this.ChandanHospital_BookingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChandanHospital_BookingDataOperationCompleted);
            }
            this.InvokeAsync("ChandanHospital_BookingData", new object[] {
                        ds}, this.ChandanHospital_BookingDataOperationCompleted, userState);
        }
        
        private void OnChandanHospital_BookingDataOperationCompleted(object arg) {
            if ((this.ChandanHospital_BookingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChandanHospital_BookingDataCompleted(this, new ChandanHospital_BookingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chandanHosp_PatientLabResult_pdf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chandanHosp_PatientLabResult_pdf(string SRCode) {
            object[] results = this.Invoke("chandanHosp_PatientLabResult_pdf", new object[] {
                        SRCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chandanHosp_PatientLabResult_pdfAsync(string SRCode) {
            this.chandanHosp_PatientLabResult_pdfAsync(SRCode, null);
        }
        
        /// <remarks/>
        public void chandanHosp_PatientLabResult_pdfAsync(string SRCode, object userState) {
            if ((this.chandanHosp_PatientLabResult_pdfOperationCompleted == null)) {
                this.chandanHosp_PatientLabResult_pdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchandanHosp_PatientLabResult_pdfOperationCompleted);
            }
            this.InvokeAsync("chandanHosp_PatientLabResult_pdf", new object[] {
                        SRCode}, this.chandanHosp_PatientLabResult_pdfOperationCompleted, userState);
        }
        
        private void OnchandanHosp_PatientLabResult_pdfOperationCompleted(object arg) {
            if ((this.chandanHosp_PatientLabResult_pdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chandanHosp_PatientLabResult_pdfCompleted(this, new chandanHosp_PatientLabResult_pdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashRecords", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PettyCashRecords(string centreCode, string fromdate, string todate) {
            object[] results = this.Invoke("PettyCashRecords", new object[] {
                        centreCode,
                        fromdate,
                        todate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PettyCashRecordsAsync(string centreCode, string fromdate, string todate) {
            this.PettyCashRecordsAsync(centreCode, fromdate, todate, null);
        }
        
        /// <remarks/>
        public void PettyCashRecordsAsync(string centreCode, string fromdate, string todate, object userState) {
            if ((this.PettyCashRecordsOperationCompleted == null)) {
                this.PettyCashRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPettyCashRecordsOperationCompleted);
            }
            this.InvokeAsync("PettyCashRecords", new object[] {
                        centreCode,
                        fromdate,
                        todate}, this.PettyCashRecordsOperationCompleted, userState);
        }
        
        private void OnPettyCashRecordsOperationCompleted(object arg) {
            if ((this.PettyCashRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PettyCashRecordsCompleted(this, new PettyCashRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPro_Bussiness_Target", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPro_Bussiness_Target(string PROCode, string DateInMonth) {
            object[] results = this.Invoke("GetPro_Bussiness_Target", new object[] {
                        PROCode,
                        DateInMonth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPro_Bussiness_TargetAsync(string PROCode, string DateInMonth) {
            this.GetPro_Bussiness_TargetAsync(PROCode, DateInMonth, null);
        }
        
        /// <remarks/>
        public void GetPro_Bussiness_TargetAsync(string PROCode, string DateInMonth, object userState) {
            if ((this.GetPro_Bussiness_TargetOperationCompleted == null)) {
                this.GetPro_Bussiness_TargetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPro_Bussiness_TargetOperationCompleted);
            }
            this.InvokeAsync("GetPro_Bussiness_Target", new object[] {
                        PROCode,
                        DateInMonth}, this.GetPro_Bussiness_TargetOperationCompleted, userState);
        }
        
        private void OnGetPro_Bussiness_TargetOperationCompleted(object arg) {
            if ((this.GetPro_Bussiness_TargetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPro_Bussiness_TargetCompleted(this, new GetPro_Bussiness_TargetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_GetPro_Bussiness_Target", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insert_GetPro_Bussiness_Target(string pro_code, string targer_date, string target_amt) {
            object[] results = this.Invoke("Insert_GetPro_Bussiness_Target", new object[] {
                        pro_code,
                        targer_date,
                        target_amt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_GetPro_Bussiness_TargetAsync(string pro_code, string targer_date, string target_amt) {
            this.Insert_GetPro_Bussiness_TargetAsync(pro_code, targer_date, target_amt, null);
        }
        
        /// <remarks/>
        public void Insert_GetPro_Bussiness_TargetAsync(string pro_code, string targer_date, string target_amt, object userState) {
            if ((this.Insert_GetPro_Bussiness_TargetOperationCompleted == null)) {
                this.Insert_GetPro_Bussiness_TargetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_GetPro_Bussiness_TargetOperationCompleted);
            }
            this.InvokeAsync("Insert_GetPro_Bussiness_Target", new object[] {
                        pro_code,
                        targer_date,
                        target_amt}, this.Insert_GetPro_Bussiness_TargetOperationCompleted, userState);
        }
        
        private void OnInsert_GetPro_Bussiness_TargetOperationCompleted(object arg) {
            if ((this.Insert_GetPro_Bussiness_TargetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_GetPro_Bussiness_TargetCompleted(this, new Insert_GetPro_Bussiness_TargetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTATSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTATSummary(string CentreCode, string FromDate, string ToDate) {
            object[] results = this.Invoke("GetTATSummary", new object[] {
                        CentreCode,
                        FromDate,
                        ToDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTATSummaryAsync(string CentreCode, string FromDate, string ToDate) {
            this.GetTATSummaryAsync(CentreCode, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetTATSummaryAsync(string CentreCode, string FromDate, string ToDate, object userState) {
            if ((this.GetTATSummaryOperationCompleted == null)) {
                this.GetTATSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTATSummaryOperationCompleted);
            }
            this.InvokeAsync("GetTATSummary", new object[] {
                        CentreCode,
                        FromDate,
                        ToDate}, this.GetTATSummaryOperationCompleted, userState);
        }
        
        private void OnGetTATSummaryOperationCompleted(object arg) {
            if ((this.GetTATSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTATSummaryCompleted(this, new GetTATSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemList(string ItemCode) {
            object[] results = this.Invoke("GetItemList", new object[] {
                        ItemCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemListAsync(string ItemCode) {
            this.GetItemListAsync(ItemCode, null);
        }
        
        /// <remarks/>
        public void GetItemListAsync(string ItemCode, object userState) {
            if ((this.GetItemListOperationCompleted == null)) {
                this.GetItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemListOperationCompleted);
            }
            this.InvokeAsync("GetItemList", new object[] {
                        ItemCode}, this.GetItemListOperationCompleted, userState);
        }
        
        private void OnGetItemListOperationCompleted(object arg) {
            if ((this.GetItemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemListCompleted(this, new GetItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_PatientRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insert_PatientRequest(string P_MobileNo, string Age, string Gender, string State, string City, string Location, string TestName, string CentreCode, string Datetime) {
            object[] results = this.Invoke("Insert_PatientRequest", new object[] {
                        P_MobileNo,
                        Age,
                        Gender,
                        State,
                        City,
                        Location,
                        TestName,
                        CentreCode,
                        Datetime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_PatientRequestAsync(string P_MobileNo, string Age, string Gender, string State, string City, string Location, string TestName, string CentreCode, string Datetime) {
            this.Insert_PatientRequestAsync(P_MobileNo, Age, Gender, State, City, Location, TestName, CentreCode, Datetime, null);
        }
        
        /// <remarks/>
        public void Insert_PatientRequestAsync(string P_MobileNo, string Age, string Gender, string State, string City, string Location, string TestName, string CentreCode, string Datetime, object userState) {
            if ((this.Insert_PatientRequestOperationCompleted == null)) {
                this.Insert_PatientRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_PatientRequestOperationCompleted);
            }
            this.InvokeAsync("Insert_PatientRequest", new object[] {
                        P_MobileNo,
                        Age,
                        Gender,
                        State,
                        City,
                        Location,
                        TestName,
                        CentreCode,
                        Datetime}, this.Insert_PatientRequestOperationCompleted, userState);
        }
        
        private void OnInsert_PatientRequestOperationCompleted(object arg) {
            if ((this.Insert_PatientRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_PatientRequestCompleted(this, new Insert_PatientRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportHeader(string VisitNo, string TestCode) {
            object[] results = this.Invoke("GetReportHeader", new object[] {
                        VisitNo,
                        TestCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportHeaderAsync(string VisitNo, string TestCode) {
            this.GetReportHeaderAsync(VisitNo, TestCode, null);
        }
        
        /// <remarks/>
        public void GetReportHeaderAsync(string VisitNo, string TestCode, object userState) {
            if ((this.GetReportHeaderOperationCompleted == null)) {
                this.GetReportHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportHeaderOperationCompleted);
            }
            this.InvokeAsync("GetReportHeader", new object[] {
                        VisitNo,
                        TestCode}, this.GetReportHeaderOperationCompleted, userState);
        }
        
        private void OnGetReportHeaderOperationCompleted(object arg) {
            if ((this.GetReportHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportHeaderCompleted(this, new GetReportHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApprovalDoctorList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApprovalDoctorList(string EmployeeID) {
            object[] results = this.Invoke("GetApprovalDoctorList", new object[] {
                        EmployeeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApprovalDoctorListAsync(string EmployeeID) {
            this.GetApprovalDoctorListAsync(EmployeeID, null);
        }
        
        /// <remarks/>
        public void GetApprovalDoctorListAsync(string EmployeeID, object userState) {
            if ((this.GetApprovalDoctorListOperationCompleted == null)) {
                this.GetApprovalDoctorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApprovalDoctorListOperationCompleted);
            }
            this.InvokeAsync("GetApprovalDoctorList", new object[] {
                        EmployeeID}, this.GetApprovalDoctorListOperationCompleted, userState);
        }
        
        private void OnGetApprovalDoctorListOperationCompleted(object arg) {
            if ((this.GetApprovalDoctorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApprovalDoctorListCompleted(this, new GetApprovalDoctorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApprovalDoctorSignature", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApprovalDoctorSignature(string EmployeeID) {
            object[] results = this.Invoke("GetApprovalDoctorSignature", new object[] {
                        EmployeeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApprovalDoctorSignatureAsync(string EmployeeID) {
            this.GetApprovalDoctorSignatureAsync(EmployeeID, null);
        }
        
        /// <remarks/>
        public void GetApprovalDoctorSignatureAsync(string EmployeeID, object userState) {
            if ((this.GetApprovalDoctorSignatureOperationCompleted == null)) {
                this.GetApprovalDoctorSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApprovalDoctorSignatureOperationCompleted);
            }
            this.InvokeAsync("GetApprovalDoctorSignature", new object[] {
                        EmployeeID}, this.GetApprovalDoctorSignatureOperationCompleted, userState);
        }
        
        private void OnGetApprovalDoctorSignatureOperationCompleted(object arg) {
            if ((this.GetApprovalDoctorSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApprovalDoctorSignatureCompleted(this, new GetApprovalDoctorSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReportSave(string VisitNo, string TestID, string ReportData) {
            object[] results = this.Invoke("ReportSave", new object[] {
                        VisitNo,
                        TestID,
                        ReportData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReportSaveAsync(string VisitNo, string TestID, string ReportData) {
            this.ReportSaveAsync(VisitNo, TestID, ReportData, null);
        }
        
        /// <remarks/>
        public void ReportSaveAsync(string VisitNo, string TestID, string ReportData, object userState) {
            if ((this.ReportSaveOperationCompleted == null)) {
                this.ReportSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportSaveOperationCompleted);
            }
            this.InvokeAsync("ReportSave", new object[] {
                        VisitNo,
                        TestID,
                        ReportData}, this.ReportSaveOperationCompleted, userState);
        }
        
        private void OnReportSaveOperationCompleted(object arg) {
            if ((this.ReportSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportSaveCompleted(this, new ReportSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCenterWiseSaleCompletedEventHandler(object sender, GetCenterWiseSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCenterWiseSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCenterWiseSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPartyWiseSaleCompletedEventHandler(object sender, GetPartyWiseSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartyWiseSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartyWiseSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPatientAuthorizationCompletedEventHandler(object sender, GetPatientAuthorizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPro_BussinessCompletedEventHandler(object sender, GetPro_BussinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPro_BussinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPro_BussinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUnitWiseTotalSalesCompletedEventHandler(object sender, GetUnitWiseTotalSalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitWiseTotalSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitWiseTotalSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UPHealthBookingDataCompletedEventHandler(object sender, UPHealthBookingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPHealthBookingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPHealthBookingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SHABookingDataCompletedEventHandler(object sender, SHABookingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SHABookingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SHABookingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HimHealthBookingDataCompletedEventHandler(object sender, HimHealthBookingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HimHealthBookingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HimHealthBookingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UPHealth_CancelTestCompletedEventHandler(object sender, UPHealth_CancelTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPHealth_CancelTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPHealth_CancelTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChandanHospital_BookingDataCompletedEventHandler(object sender, ChandanHospital_BookingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChandanHospital_BookingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChandanHospital_BookingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void chandanHosp_PatientLabResult_pdfCompletedEventHandler(object sender, chandanHosp_PatientLabResult_pdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chandanHosp_PatientLabResult_pdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chandanHosp_PatientLabResult_pdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PettyCashRecordsCompletedEventHandler(object sender, PettyCashRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PettyCashRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PettyCashRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPro_Bussiness_TargetCompletedEventHandler(object sender, GetPro_Bussiness_TargetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPro_Bussiness_TargetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPro_Bussiness_TargetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_GetPro_Bussiness_TargetCompletedEventHandler(object sender, Insert_GetPro_Bussiness_TargetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_GetPro_Bussiness_TargetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_GetPro_Bussiness_TargetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTATSummaryCompletedEventHandler(object sender, GetTATSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTATSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTATSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetItemListCompletedEventHandler(object sender, GetItemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_PatientRequestCompletedEventHandler(object sender, Insert_PatientRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_PatientRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_PatientRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetReportHeaderCompletedEventHandler(object sender, GetReportHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetApprovalDoctorListCompletedEventHandler(object sender, GetApprovalDoctorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApprovalDoctorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApprovalDoctorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetApprovalDoctorSignatureCompletedEventHandler(object sender, GetApprovalDoctorSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApprovalDoctorSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApprovalDoctorSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReportSaveCompletedEventHandler(object sender, ReportSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591